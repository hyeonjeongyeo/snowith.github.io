{"componentChunkName":"component---src-templates-post-tsx","path":"/greedy_algorithm/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"greedy-algorithm\" style=\"position:relative;\"><a href=\"#greedy-algorithm\" aria-label=\"greedy algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Greedy algorithm</h2>\n<p>매 상황에서 최적의 해를 구하는 것이 전체 문제의 최적 해가 될때 사용하는 알고리즘으로, 구현하기는 어렵지 않지만 정당성을 증명해야 답을 보장할 수 있다. 다음의 문제들에서 그리디 알고리즘을 사용해 정당성 증명을 연습할 수 있다.</p>\n<blockquote>\n<p>모든 문제의 출처: <a href=\"https://www.youtube.com/watch?v=m-9pAwq1o3w&#x26;list=PLRx0vPvlEmdAghTr5mXQxGpHjWqSz0dgC&#x26;index=1\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이코테 유튜브</a></p>\n</blockquote>\n<h3 id=\"문제-거스름-돈\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EA%B1%B0%EC%8A%A4%EB%A6%84-%EB%8F%88\" aria-label=\"문제 거스름 돈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;문제> 거스름 돈</h3>\n<p><code class=\"language-text\">n</code>원을 <code class=\"language-text\">10원</code>, <code class=\"language-text\">50원</code>, <code class=\"language-text\">100원</code>, <code class=\"language-text\">500원</code> 동전으로 거슬러 주려고 할 때, 거슬러주는 동전의 개수를 최소화하려고 한다. 이때 거슬러 주는 동전의 최소 개수를 반환하는 문제이다.</p>\n<h4 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h4>\n<ul>\n<li>전략: 가장 큰 화폐 단위부터 거슬러 준다.</li>\n<li>정당성 증명: 거슬러 줄 동전 중 큰 단위가 항상 작은 단위의 배수이므로, 같은 돈을 거슬러 주는 방법 중 가장 적은 동전을 사용하는 방법은 가능한 한 가장 큰 단위의 동전을 사용하는 것이다.</li>\n<li>즉 동전의 단위가 500원, 400원, 100원으로 주어진 경우에는 그리디 알고리즘으로 해답을 구할 수 없다.</li>\n</ul>\n<h4 id=\"파이썬-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">coins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> coin <span class=\"token keyword\">in</span> coins<span class=\"token punctuation\">:</span>\n\tcnt <span class=\"token operator\">+=</span> n <span class=\"token operator\">//</span> coin\n\tn <span class=\"token operator\">%=</span> coin\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> </code></pre></div>\n<h3 id=\"문제-1이-될-때까지\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-1%EC%9D%B4-%EB%90%A0-%EB%95%8C%EA%B9%8C%EC%A7%80\" aria-label=\"문제 1이 될 때까지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;문제> 1이 될 때까지</h3>\n<p>1이 아닌 숫자 <code class=\"language-text\">N</code>과 <code class=\"language-text\">K</code>가 주어진다. 오직 두 가지 연산만 할 수 있는데, N이 K로 나누어지는 경우 <code class=\"language-text\">N을 K로 나눌</code> 수 있고, 그 외의 경우에는 <code class=\"language-text\">N에서 1을 뺄</code> 수 있다. 여기서 N을 1로 만드는 최소 연산 횟수를 구하는 문제다.  </p>\n<h4 id=\"문제-해결-아이디어-1\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4-1\" aria-label=\"문제 해결 아이디어 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h4>\n<ul>\n<li>전략 : 숫자 N이 K로 나누어지는 경우의 수를 최대한으로 하되, 만약 N이 K로 나누어지지 않으면 1을 뺀다.</li>\n<li>정당성 증명: 만약 N이 K로 나누어지면, N과 K는 1이 아니므로 N 나누기 K 는 N - 1보다 작은 값이 된다. 언제나 1을 빼는 것으로 N을 1로 만들 수 있으므로, 매번 N을 최대한 작은 수로 만드는 방법으로 전체 연산 횟수를 최소화 할 수 있다.</li>\n</ul>\n<h4 id=\"파이썬-코드-1\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C-1\" aria-label=\"파이썬 코드 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">while</span> n <span class=\"token operator\">>=</span> k<span class=\"token punctuation\">:</span>\n\t<span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> k <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n\t\tcnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\tn <span class=\"token operator\">//=</span> k\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\tcnt <span class=\"token operator\">+=</span> n <span class=\"token operator\">%</span> k\n\t\tn <span class=\"token operator\">-=</span> n <span class=\"token operator\">%</span> k\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt <span class=\"token operator\">+</span> n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"문제-곱하기-혹은-더하기\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EA%B3%B1%ED%95%98%EA%B8%B0-%ED%98%B9%EC%9D%80-%EB%8D%94%ED%95%98%EA%B8%B0\" aria-label=\"문제 곱하기 혹은 더하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;문제> 곱하기 혹은 더하기</h3>\n<p>0 또는 양수인 임의의 수들 <code class=\"language-text\">s</code>가 주어질 때, 두 수를 더하거나 곱해서 만들 수 있는 가장 큰 수를 반환하는 문제다.</p>\n<h4 id=\"문제-해결-아이디어-2\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4-2\" aria-label=\"문제 해결 아이디어 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h4>\n<ul>\n<li>전략 : 피연산자 두개 중 하나라도 0이나 1이면 더하고, 그 외의 경우면 곱한다.</li>\n<li>정당성 증명: 연산의 왼쪽 숫자를 임의의 수 N이라 할 때, 모든 수는 0 또는 양수이므로 <code class=\"language-text\">N * 0 = 0</code> 보다 <code class=\"language-text\">N + 0 = N</code> 이 같거나 크고, <code class=\"language-text\">N * 1 = N</code> 보다 <code class=\"language-text\">N + 1</code> 이 더 크다. 반면, 2이상 9이하의 정수 X에 대해 <code class=\"language-text\">N * X</code> 보다 <code class=\"language-text\">N + X</code> 가 같거나 작다.</li>\n<li>곱셈과 덧셈은 교환법칙이 성립하므로 피연산자의 순서에 관계없이 위의 법칙이 성립한다.</li>\n</ul>\n<h4 id=\"파이썬-코드-2\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C-2\" aria-label=\"파이썬 코드 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">s <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nret <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\tnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> num <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> ret <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> \n\t\tret <span class=\"token operator\">+=</span> num\n\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n\t\tret <span class=\"token operator\">*=</span> num\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"문제-모험가-길드\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%AA%A8%ED%97%98%EA%B0%80-%EA%B8%B8%EB%93%9C\" aria-label=\"문제 모험가 길드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>&#x3C;문제> 모험가 길드</h3>\n<p>어떤 마을에 모험가들이 있다. 모험가들은 제각기 공포도가 있는데, 공포도가 <code class=\"language-text\">i</code>인 사람은 <code class=\"language-text\">i</code>명 이상이 속한 그룹에 들어야 모험을 나갈 수 있다. 모험가들의 공포도가 주어질 때, 모험을 나가는 그룹의 수를 최대화해서 반환하는 문제다. 단, 모험가들이 마을에 남아있는 경우도 허용된다.</p>\n<h4 id=\"문제-해결-아이디어-3\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4-3\" aria-label=\"문제 해결 아이디어 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h4>\n<ul>\n<li>전략: 공포도가 적은 사람부터 순서대로 그룹을 꾸리되, 그룹의 최소 정원이 만족되면 다음 그룹으로 편성한다.</li>\n<li>정당성 증명: 주어진 정보에 대해 그룹수가 최대가 되도록 꾸려진 임의의 편성이 있다고 하자. 이 편성의 한 그룹에 대해  공포도가 적은 사람부터 그룹의 최소 정원을 만족하도록 그룹을 만들고 이외의 모험가들을 제외시켜도 여전히 그룹의 수는 최대이다. 따라서 위의 전략은 최적의 해를 보장한다.</li>\n</ul>\n<h4 id=\"파이썬-코드-3\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C-3\" aria-label=\"파이썬 코드 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">n <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfears <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfears<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># cnt : 각 그룹에 포함된 사람의 수</span>\n<span class=\"token comment\"># ret : 전체 그룹의 수</span>\ncnt<span class=\"token punctuation\">,</span> ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">for</span> fear <span class=\"token keyword\">in</span> fears<span class=\"token punctuation\">:</span>\n\tcnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t<span class=\"token comment\"># fear가 cnt를 넘으면,</span>\n\t<span class=\"token comment\"># 전체 그룹 수를 1 증가하고 cnt를 초기화 한다. </span>\n\t<span class=\"token keyword\">if</span> cnt <span class=\"token operator\">>=</span> fear<span class=\"token punctuation\">:</span>\n\t\tret <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\tcnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\t\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"Greedy algorithm 매 상황에서 최적의 해를 구하는 것이 전체 문제의 최적 해가 될때 사용하는 알고리즘으로, 구현하기는 어렵지 않지만 정당성을 증명해야 답을 보장할 수 있다. 다음의 문제들에서 그리디 알고리즘을 사용해 정당성 증명을 연습할…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/greedy_algorithm/#greedy-algorithm\">Greedy algorithm</a></p>\n<ul>\n<li><a href=\"/greedy_algorithm/#%EB%AC%B8%EC%A0%9C-%EA%B1%B0%EC%8A%A4%EB%A6%84-%EB%8F%88\">&#x3C;문제> 거스름 돈</a></li>\n<li><a href=\"/greedy_algorithm/#%EB%AC%B8%EC%A0%9C-1%EC%9D%B4-%EB%90%A0-%EB%95%8C%EA%B9%8C%EC%A7%80\">&#x3C;문제> 1이 될 때까지</a></li>\n<li><a href=\"/greedy_algorithm/#%EB%AC%B8%EC%A0%9C-%EA%B3%B1%ED%95%98%EA%B8%B0-%ED%98%B9%EC%9D%80-%EB%8D%94%ED%95%98%EA%B8%B0\">&#x3C;문제> 곱하기 혹은 더하기</a></li>\n<li><a href=\"/greedy_algorithm/#%EB%AC%B8%EC%A0%9C-%EB%AA%A8%ED%97%98%EA%B0%80-%EA%B8%B8%EB%93%9C\">&#x3C;문제> 모험가 길드</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/greedy_algorithm/"},"frontmatter":{"title":"그리디 알고리즘의 정당성 증명","date":"Mar 09, 2022","tags":["Algorithm","Greedy Algorithm"],"keywords":["Lab.Snowith","snowith"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/greedy_algorithm/","series":[],"lastmod":"2022-03-09"}},"staticQueryHashes":["2027115977","694178885"]}