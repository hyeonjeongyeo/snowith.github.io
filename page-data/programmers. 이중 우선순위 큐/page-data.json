{"componentChunkName":"component---src-templates-post-tsx","path":"/programmers. 이중 우선순위 큐/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>문제 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42628\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">프로그래머스</a></p>\n</blockquote>\n<h2 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h2>\n<p>최소 힙과 최대 힙을 동시에 이용하는 것이 핵심이다. 이중 우선순위 큐에 적용하는 세가지 연산을 경우 별로 나누어 고려한다.</p>\n<ul>\n<li>원소를 추가할 경우, 최소 힙과 최대 힙에 모두 추가한다.</li>\n<li>최소값을 제거할 경우, 최소 힙이 비어있지 않으면 최소힙의 최소값을 제거한다. 만약 최대힙의 인덱스 0인 값이 지우려는 해당 원소이면, 최대힙에서 이 원소를 제거한다.</li>\n<li>최대값을 제거할 경우, 최대 힙이 비어있지 않으면 최대힙의 최대값을 제거한다. 만약 최소힙의 인덱스 0인 값이 지우려는 해당 원소이면, 최소힙에서 이 원소를 제거한다.</li>\n<li>다음 루프를 실행하기 전에, 최소 힙이나 최대 힙 중 하나라도 비어있거나 최소힙의 최소값이 최대힙의 최대값보다 크면, 두개 힙을 모두 비운다.</li>\n</ul>\n<p>루프가 종료된 후, 최소힙과 최대힙 둘 중 하나라도 비어있으면 이중 우선순위 큐가 비었다는 뜻이므로 [0,0]을 반환한다. 아닐경우, 최대힙에서 최대값을 최소힙에서 최소값을 반환한다.</p>\n<p>주어진 리스트 operations의 길이는 최대 1,000,000이지만, 힙으로 정렬한 수행시간은 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(NlogN)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span>으로 시간내에 해결 할 수 있다.</p>\n<h2 id=\"파이썬-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> heapq <span class=\"token keyword\">import</span> heappush<span class=\"token punctuation\">,</span> heappop\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>operations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    hq1<span class=\"token punctuation\">,</span> hq2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> op <span class=\"token keyword\">in</span> operations<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># hq1이 최소 힙, hq2가 최대 힙</span>\n        <span class=\"token keyword\">if</span> op<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'I'</span><span class=\"token punctuation\">:</span>\n            heappush<span class=\"token punctuation\">(</span>hq1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            heappush<span class=\"token punctuation\">(</span>hq2<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        \n        <span class=\"token comment\"># 최대 힙에서 원소를 제거한다</span>\n        <span class=\"token comment\"># 최소 힙이 비지 않고, 삭제할 값이 최소 힙에 있으면, 최소 힙에서 원소를 제거한다</span>\n        <span class=\"token keyword\">elif</span> op <span class=\"token operator\">==</span> <span class=\"token string\">'D 1'</span> <span class=\"token keyword\">and</span> hq2 <span class=\"token operator\">!=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> hq1 <span class=\"token keyword\">and</span> hq1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>hq2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                heappop<span class=\"token punctuation\">(</span>hq1<span class=\"token punctuation\">)</span>\n            heappop<span class=\"token punctuation\">(</span>hq2<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 최소 힙에서 원소를 제거한다</span>\n        <span class=\"token comment\"># 최대 힙이 비지 않고, 삭제할 값이 최대 힙에 있으면, 최대 힙에서 원소를 제거한다</span>\n        <span class=\"token keyword\">elif</span> op <span class=\"token operator\">==</span> <span class=\"token string\">'D -1'</span> <span class=\"token keyword\">and</span> hq1 <span class=\"token operator\">!=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> hq2 <span class=\"token keyword\">and</span> hq1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>hq2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                heappop<span class=\"token punctuation\">(</span>hq2<span class=\"token punctuation\">)</span>\n            heappop<span class=\"token punctuation\">(</span>hq1<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 최소 힙이나 최대 힙 중 하나라도 비어있거나, 두 힙의 최소값이 최대값보다 크다면 </span>\n        <span class=\"token comment\"># 힙을 모두 비운다</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> hq1 <span class=\"token keyword\">or</span> <span class=\"token keyword\">not</span> hq2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>hq1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span>hq2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n            hq1<span class=\"token punctuation\">,</span> hq2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n            \n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hq1 <span class=\"token keyword\">or</span> <span class=\"token keyword\">not</span> hq2<span class=\"token punctuation\">:</span> \n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span>hq2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> hq1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></code></pre></div>","excerpt":"문제 : 프로그래머스 문제 해결 아이디어 최소 힙과 최대 힙을 동시에 이용하는 것이 핵심이다. 이중 우선순위 큐에 적용하는 세가지 연산을 경우 별로 나누어 고려한다. 원소를 추가할 경우, 최소 힙과 최대 힙에 모두 추가한다. 최소값을 제거할 경우, …","tableOfContents":"<ul>\n<li><a href=\"/programmers.%20%EC%9D%B4%EC%A4%91%20%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%20%ED%81%90/#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">문제 해결 아이디어</a></li>\n<li><a href=\"/programmers.%20%EC%9D%B4%EC%A4%91%20%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84%20%ED%81%90/#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\">파이썬 코드</a></li>\n</ul>","fields":{"slug":"/programmers. 이중 우선순위 큐/"},"frontmatter":{"title":"programmers. 이중 우선순위 큐","date":"Feb 26, 2022","tags":["Algorithms","programmers","Heap"],"keywords":["Lab.Snowith","snowith"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/programmers. 이중 우선순위 큐/","series":[],"lastmod":"2022-02-26"}},"staticQueryHashes":["2027115977","694178885"]}