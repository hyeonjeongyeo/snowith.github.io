{"componentChunkName":"component---src-templates-post-tsx","path":"/programmers. 디스크 컨트롤러/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>문제 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42627\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">프로그래머스</a></p>\n</blockquote>\n<h2 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h2>\n<ul>\n<li>하드디스크가 비어있을 때 요청이 들어오면 바로 처리한다.</li>\n<li>하드디스크가 작업 중일 때 요청이 들어오면 진행 중인 작업을 끝내고, 작업 소요 시간을 최소 힙으로 정렬하여 힙의 순서대로 처리한다.</li>\n</ul>\n<p>이때 <code class=\"language-text\">start</code>와 <code class=\"language-text\">end</code>로 현재 작업 시간의 양쪽 끝을 설정해서 지속적으로 업데이트 할 수 있다. 또 루프를 시작할 때 요청시간이 <code class=\"language-text\">end</code>와 작거나 같은 것으로 탐색하므로, 아무 것도 처리하지 않는 빈 시간에 대해 주어진 리스트 <code class=\"language-text\">jobs</code>의 인덱스 <code class=\"language-text\">i</code>는 그대로 두고 <code class=\"language-text\">end</code>를 1씩 증가시킨다. </p>\n<p><code class=\"language-text\">jobs</code>의 길이, 즉 힙이 정렬할 원소 개수의 최대값은 500 이하이고, 작업 소요시간은 1,000이하이지만 다음코드에서 한번에 처리(<code class=\"language-text\">end += now[0]</code>)하므로 시간내에 문제를 해결할 수 있다.</p>\n<h2 id=\"파이썬-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> heapq <span class=\"token keyword\">import</span> heappush<span class=\"token punctuation\">,</span> heappop\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>jobs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n    ret<span class=\"token punctuation\">,</span> hq <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token comment\"># 힙에서 하나를 꺼낼때 마다 start와 end를 업데이트한다</span>\n    <span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>jobs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 요청시간이 작업 도중인 경우, 힙에 추가하기</span>\n        <span class=\"token keyword\">for</span> job <span class=\"token keyword\">in</span> jobs<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> start <span class=\"token operator\">&lt;</span> job<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> end<span class=\"token punctuation\">:</span>\n                heappush<span class=\"token punctuation\">(</span>hq<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>job<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> job<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 힙이 비어 있지 않으면</span>\n        <span class=\"token comment\"># 힙에 있는 소요 시간이 가장 작은 작업을 처리한다</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>hq<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            now <span class=\"token operator\">=</span> heappop<span class=\"token punctuation\">(</span>hq<span class=\"token punctuation\">)</span>\n            start <span class=\"token operator\">=</span> end\n            end <span class=\"token operator\">+=</span> now<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            ret<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> now<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># 힙이 비었으면, 즉 현재 작업이 끝날 때까지 요청이 없으면</span>\n        <span class=\"token comment\"># 요청이 들어올 때까지 end를 증가시킨다</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            end <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token comment\"># 문제에서 요구하는 작업 소요시간 평균을 반환한다</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"문제 : 프로그래머스 문제 해결 아이디어 하드디스크가 비어있을 때 요청이 들어오면 바로 처리한다. 하드디스크가 작업 중일 때 요청이 들어오면 진행 중인 작업을 끝내고, 작업 소요 시간을 최소 힙으로 정렬하여 힙의 순서대로 처리한다. 이때 와 로 현재…","tableOfContents":"<ul>\n<li><a href=\"/programmers.%20%EB%94%94%EC%8A%A4%ED%81%AC%20%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC/#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">문제 해결 아이디어</a></li>\n<li><a href=\"/programmers.%20%EB%94%94%EC%8A%A4%ED%81%AC%20%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC/#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\">파이썬 코드</a></li>\n</ul>","fields":{"slug":"/programmers. 디스크 컨트롤러/"},"frontmatter":{"title":"programmers. 디스크 컨트롤러","date":"Feb 26, 2022","tags":["Algorithms","programmers","Heap"],"keywords":["lab snowith","snowith"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/programmers. 디스크 컨트롤러/","series":[],"lastmod":"2022-02-26"}},"staticQueryHashes":["2027115977","694178885"]}