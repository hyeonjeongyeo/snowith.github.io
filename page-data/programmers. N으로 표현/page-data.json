{"componentChunkName":"component---src-templates-post-tsx","path":"/programmers. N으로 표현/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>문제 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/42895\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">프로그래머스</a></p>\n</blockquote>\n<h3 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h3>\n<ul>\n<li>다이내믹 프로그래밍을 활용하여 해결 할 수 있다. </li>\n<li>최대 8번까지 N의 횟수를 세어야 하므로, DP 테이블을 길이 8인 1차원 배열로 만든다.</li>\n<li>DP 테이블 dp[i]에 N을 i번 이용해 만들 수 있는 수의 배열을 저장한다. dp테이블은 테이블 인덱스 i에 대해 N을 i번 반복하는 수로 초기화한다. </li>\n<li>N을 사용하는 횟수의 최소값을 반환해야 하므로 dp를 작은 수 부터 채워나간다. dp[j]에 있는 원소에 대해 dp[i-j]에 있는 원소를 연산하므로, <code class=\"language-text\">dp[j] {사칙연산} dp[i-j]</code>는 N을 총 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>j</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">j + (i - j) = i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">i</span></span></span></span>번 사용한다.</li>\n</ul>\n<h4 id=\"파이썬-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    <span class=\"token comment\"># dp[i] : N을 i번 이용해 만들 수 있는 수의 배열</span>\n    <span class=\"token comment\"># 초기값은 N을 i번 사용한 수로 정의한다.</span>\n    dp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> dp<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>number<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># dp[j] {사칙연산} dp[i-j]는 N을 총 i번 사용한다.</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> b <span class=\"token keyword\">in</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span>\n                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span>\n                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">if</span> b <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 0으로 나누지 않도록 한다.</span>\n                    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>a <span class=\"token operator\">//</span> b<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 탐색 시간을 줄이기 위해 중복 제거한다.</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> number <span class=\"token keyword\">in</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> i\n\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></code></pre></div>","excerpt":"문제 : 프로그래머스 문제 해결 아이디어 다이내믹 프로그래밍을 활용하여 해결 할 수 있다.  최대 8번까지 N의 횟수를 세어야 하므로, DP 테이블을 길이 8인 1차원 배열로 만든다. DP 테이블 dpi에 N을 i번 이용해 만들 수 있는 수의 배열을…","tableOfContents":"<ul>\n<li><a href=\"/programmers.%20N%E1%84%8B%E1%85%B3%E1%84%85%E1%85%A9%20%E1%84%91%E1%85%AD%E1%84%92%E1%85%A7%E1%86%AB/#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">문제 해결 아이디어</a></li>\n</ul>","fields":{"slug":"/programmers. N으로 표현/"},"frontmatter":{"title":"programmers. N으로 표현","date":"Feb 09, 2022","tags":["Algorithms","programmers","Dynamic Programming"],"keywords":["lab snowith","snowith"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/programmers. N으로 표현/","series":[],"lastmod":"2022-02-09"}},"staticQueryHashes":["2027115977","694178885"]}