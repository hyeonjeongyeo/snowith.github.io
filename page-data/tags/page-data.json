{"componentChunkName":"component---src-pages-tags-tsx","path":"/tags/","result":{"data":{"allMarkdownRemark":{"group":[{"fieldValue":"Algorithm","totalCount":1,"edges":[{"node":{"excerpt":"Greedy algorithm 매 상황에서 최적의 해를 구하는 것이 전체 문제의 최적 해가 될때 사용하는 알고리즘으로, 구현하기는 어렵지 않지만 정당성을 증명해야 답을 보장할 수 있다. 다음의 문제들에서 그리디 알고리즘을 사용해 정당성 증명을 연습할…","fields":{"slug":"/greedy_algorithm/"},"frontmatter":{"date":"Mar 09, 2022","update":"Jan 01, 0001","title":"그리디 알고리즘의 정당성 증명","tags":["Algorithm","Greedy Algorithm"]}}}]},{"fieldValue":"Algorithms","totalCount":15,"edges":[{"node":{"excerpt":"최단 경로 알고리즘 그래프는 간선에 가중치 정보를 추가할 수 있다. 이런 그래프를 가중 그래프(weighted graph) 라고 하며, 자연스럽게 출발 노드에서 특정 노드로 가는 경로의 가중치 합이 최소가 되는 경로를 찾는 문제가 발생한다. 깊이 우…","fields":{"slug":"/shortest_path/"},"frontmatter":{"date":"Mar 21, 2022","update":"Jan 01, 0001","title":"최단 경로 알고리즘","tags":["Algorithms","Shortest Path","Dijkstra Algorithm","Floyd-Warshall Algorithm"]}}},{"node":{"excerpt":"문제: 프로그래머스 문제 해결 아이디어 그래프와 각 간선의 가중치가 주어질 때, 시작 노드에서 출발해 지나는 간선의 가중치를 모두 더해 도착할 때까지 이  이하가 되는 노드를 모두 찾는 문제다. 즉 시작노드에서 특정 노드까지 가중치 합을 최소로 하는…","fields":{"slug":"/programmers. 배달/"},"frontmatter":{"date":"Mar 19, 2022","update":"Jan 01, 0001","title":"programmers. 배달","tags":["Algorithms","Graph","Shortest Path","Dijkstra Algorithm"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 효율성 통과가 까다롭다고 느꼈던 문제중 하나로, 점수를 제외한 가 에 불과하다는 점을 이용해서 모든 조건 조합을 해시한 다음 이진 검색을 통해 해결할 수 있었다. 코드는 문제에서 요구하는 순서대로 작성하면 된…","fields":{"slug":"/programmers. 순위 검색/"},"frontmatter":{"date":"Mar 05, 2022","update":"Jan 01, 0001","title":"programmers. 순위 검색","tags":["Algorithms","programmers","Hashing","Binary Search"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 하드디스크가 비어있을 때 요청이 들어오면 바로 처리한다. 하드디스크가 작업 중일 때 요청이 들어오면 진행 중인 작업을 끝내고, 작업 소요 시간을 최소 힙으로 정렬하여 힙의 순서대로 처리한다. 이때 와 로 현재…","fields":{"slug":"/programmers. 디스크 컨트롤러/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 디스크 컨트롤러","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 단어가 알파벳 하나 차이로 다른 경우 단어 노드를 간선으로 연결한 후 시작 단어에서 타깃 단어에 이르기 까지 깊이 우선 탐색을 이용하여 해결할 수 있다. 그래프 생성: 단어 2개 조합에서 알파벳이 하나 차이나…","fields":{"slug":"/programmers. 단어 변환/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 단어 변환","tags":["Algorithms","programmers","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 문제에서 정의한 야근 피로도는 야근을 시작한 시점에서 남은 일의 작업량을 모두 제곱하여 더한 값으로 해석할 수 있다. 수식으로 쓰면 문제의 목표는 이고 주어진 리스트에 대해 최대값을 최소화해서 목표를 달성할 …","fields":{"slug":"/programmers. 야근 지수/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 야근 지수","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 최소 힙과 최대 힙을 동시에 이용하는 것이 핵심이다. 이중 우선순위 큐에 적용하는 세가지 연산을 경우 별로 나누어 고려한다. 원소를 추가할 경우, 최소 힙과 최대 힙에 모두 추가한다. 최소값을 제거할 경우, …","fields":{"slug":"/programmers. 이중 우선순위 큐/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 이중 우선순위 큐","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 에 대해 건설 비용이 작은 것부터 건설하면 전체 건설 비용이 가장 작도록 선택할 수 있다. 만약 두 지점 사이의 건설 비용이 아니라 부분 그래프의 건설 비용이 주어졌다면 그리디 알고리즘으로 구현할 수 없다. …","fields":{"slug":"/programmers. 섬 연결하기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 섬 연결하기","tags":["Algorithms","programmers","Greedy Algorithm","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 투 포인터 알고리즘으로 문제를 해결 할 수 있다. 배열의 임의의 원소 ai에 대해 왼쪽 원소값 ai-1과 오른쪽 원소값 ai+1이 모두 ai보다 작은 경우 마지막까지 남을 수 없으므로 제외한다.  스택에 마지…","fields":{"slug":"/programmers. 풍선 터뜨리기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 풍선 터뜨리기","tags":["Algorithms","programmers","Two Pointer Algorithm"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 문제는 k 길이의 구간(또는 window) 최대값 중 최소값을 구하는 문제로 이해될 수 있다. stones 배열의 길이가 n이라 할 때, max()함수로 최대값을 구하는데에 선형 시간이 소요되므로 max()함…","fields":{"slug":"/programmers. 징검다리 건너기/"},"frontmatter":{"date":"Feb 10, 2022","update":"Jan 01, 0001","title":"programmers. 징검다리 건너기","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 길 찾기 문제이며 다이나믹 프로그래밍으로 해결할 수 있다. 오른쪽과 아래쪽으로만 갈 수 있으므로 왼쪽과 위쪽의 정보를 기반으로 해야한다. 최단 경로의 개수이므로 왼쪽과 위쪽의 값을 더하면 된다. 배열 초기화를…","fields":{"slug":"/programmers. 등굣길/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 등굣길","tags":["Algorithms","programmers","Dynamic Programming"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다. 구현 문제는 빛을 좌회전, 우회전하는 것으로, 라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른…","fields":{"slug":"/programmers. 빛의 경로 사이클/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 빛의 경로 사이클","tags":["Algorithms","programmers","Implementation","Graph","Cyclic Graph"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 보드의 가로 세로 길이가 최대 1,000이므로 모든 보드의 원소에 대해 구간별로 탐색하면 문제에서 요구하는 시간을 맞출 수 없다. 대신 보드의 원소가 모두 1 또는 0이라는 것을 이용하여 (길 찾기 예제에서 …","fields":{"slug":"/programmers. 가장 큰 정사각형 찾기/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 가장 큰 정사각형 찾기","tags":["Algorithms","programmers","Dynamic Programming"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 그래프에서  전체 경로를 만든다. 현재 위치에서 출발하는 티켓이 있는 경우 스택에 저장하고 티켓을 사용 처리한다. 현재 위치에서 출발하는 티켓이 없는 경우 해당 위치에는 도착만 가능하다. 해당 공항을 순서대로…","fields":{"slug":"/programmers. 여행경로/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 여행경로","tags":["Algorithms","programmers","Graph"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 다이내믹 프로그래밍을 활용하여 해결 할 수 있다.  최대 8번까지 N의 횟수를 세어야 하므로, DP 테이블을 길이 8인 1차원 배열로 만든다. DP 테이블 dpi에 N을 i번 이용해 만들 수 있는 수의 배열을…","fields":{"slug":"/programmers. N으로 표현/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. N으로 표현","tags":["Algorithms","programmers","Dynamic Programming"]}}}]},{"fieldValue":"Binary Search","totalCount":1,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 효율성 통과가 까다롭다고 느꼈던 문제중 하나로, 점수를 제외한 가 에 불과하다는 점을 이용해서 모든 조건 조합을 해시한 다음 이진 검색을 통해 해결할 수 있었다. 코드는 문제에서 요구하는 순서대로 작성하면 된…","fields":{"slug":"/programmers. 순위 검색/"},"frontmatter":{"date":"Mar 05, 2022","update":"Jan 01, 0001","title":"programmers. 순위 검색","tags":["Algorithms","programmers","Hashing","Binary Search"]}}}]},{"fieldValue":"Cyclic Graph","totalCount":1,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다. 구현 문제는 빛을 좌회전, 우회전하는 것으로, 라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른…","fields":{"slug":"/programmers. 빛의 경로 사이클/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 빛의 경로 사이클","tags":["Algorithms","programmers","Implementation","Graph","Cyclic Graph"]}}}]},{"fieldValue":"DFS","totalCount":2,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 단어가 알파벳 하나 차이로 다른 경우 단어 노드를 간선으로 연결한 후 시작 단어에서 타깃 단어에 이르기 까지 깊이 우선 탐색을 이용하여 해결할 수 있다. 그래프 생성: 단어 2개 조합에서 알파벳이 하나 차이나…","fields":{"slug":"/programmers. 단어 변환/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 단어 변환","tags":["Algorithms","programmers","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 에 대해 건설 비용이 작은 것부터 건설하면 전체 건설 비용이 가장 작도록 선택할 수 있다. 만약 두 지점 사이의 건설 비용이 아니라 부분 그래프의 건설 비용이 주어졌다면 그리디 알고리즘으로 구현할 수 없다. …","fields":{"slug":"/programmers. 섬 연결하기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 섬 연결하기","tags":["Algorithms","programmers","Greedy Algorithm","Graph","DFS"]}}}]},{"fieldValue":"Dijkstra Algorithm","totalCount":2,"edges":[{"node":{"excerpt":"최단 경로 알고리즘 그래프는 간선에 가중치 정보를 추가할 수 있다. 이런 그래프를 가중 그래프(weighted graph) 라고 하며, 자연스럽게 출발 노드에서 특정 노드로 가는 경로의 가중치 합이 최소가 되는 경로를 찾는 문제가 발생한다. 깊이 우…","fields":{"slug":"/shortest_path/"},"frontmatter":{"date":"Mar 21, 2022","update":"Jan 01, 0001","title":"최단 경로 알고리즘","tags":["Algorithms","Shortest Path","Dijkstra Algorithm","Floyd-Warshall Algorithm"]}}},{"node":{"excerpt":"문제: 프로그래머스 문제 해결 아이디어 그래프와 각 간선의 가중치가 주어질 때, 시작 노드에서 출발해 지나는 간선의 가중치를 모두 더해 도착할 때까지 이  이하가 되는 노드를 모두 찾는 문제다. 즉 시작노드에서 특정 노드까지 가중치 합을 최소로 하는…","fields":{"slug":"/programmers. 배달/"},"frontmatter":{"date":"Mar 19, 2022","update":"Jan 01, 0001","title":"programmers. 배달","tags":["Algorithms","Graph","Shortest Path","Dijkstra Algorithm"]}}}]},{"fieldValue":"Dynamic Programming","totalCount":3,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 길 찾기 문제이며 다이나믹 프로그래밍으로 해결할 수 있다. 오른쪽과 아래쪽으로만 갈 수 있으므로 왼쪽과 위쪽의 정보를 기반으로 해야한다. 최단 경로의 개수이므로 왼쪽과 위쪽의 값을 더하면 된다. 배열 초기화를…","fields":{"slug":"/programmers. 등굣길/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 등굣길","tags":["Algorithms","programmers","Dynamic Programming"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 보드의 가로 세로 길이가 최대 1,000이므로 모든 보드의 원소에 대해 구간별로 탐색하면 문제에서 요구하는 시간을 맞출 수 없다. 대신 보드의 원소가 모두 1 또는 0이라는 것을 이용하여 (길 찾기 예제에서 …","fields":{"slug":"/programmers. 가장 큰 정사각형 찾기/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 가장 큰 정사각형 찾기","tags":["Algorithms","programmers","Dynamic Programming"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 다이내믹 프로그래밍을 활용하여 해결 할 수 있다.  최대 8번까지 N의 횟수를 세어야 하므로, DP 테이블을 길이 8인 1차원 배열로 만든다. DP 테이블 dpi에 N을 i번 이용해 만들 수 있는 수의 배열을…","fields":{"slug":"/programmers. N으로 표현/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. N으로 표현","tags":["Algorithms","programmers","Dynamic Programming"]}}}]},{"fieldValue":"Floyd-Warshall Algorithm","totalCount":1,"edges":[{"node":{"excerpt":"최단 경로 알고리즘 그래프는 간선에 가중치 정보를 추가할 수 있다. 이런 그래프를 가중 그래프(weighted graph) 라고 하며, 자연스럽게 출발 노드에서 특정 노드로 가는 경로의 가중치 합이 최소가 되는 경로를 찾는 문제가 발생한다. 깊이 우…","fields":{"slug":"/shortest_path/"},"frontmatter":{"date":"Mar 21, 2022","update":"Jan 01, 0001","title":"최단 경로 알고리즘","tags":["Algorithms","Shortest Path","Dijkstra Algorithm","Floyd-Warshall Algorithm"]}}}]},{"fieldValue":"Git","totalCount":1,"edges":[{"node":{"excerpt":"분산 버전 관리 시스템인 깃 명령어(git commands)를 쉽게 볼 수 있도록 정리한 문서입니다. 0. 깃 프로젝트의 세 단계 워킹 트리 (working tree) : 파일을 수정하는 공간이다. 스테이징을 통해 스테이징 에리어로 수정사항을 보낸다…","fields":{"slug":"/git_cheat_sheet/"},"frontmatter":{"date":"Feb 04, 2022","update":"Mar 01, 2022","title":"깃 치트 시트 (Git Cheat Sheet)","tags":["Git"]}}}]},{"fieldValue":"Graph","totalCount":5,"edges":[{"node":{"excerpt":"문제: 프로그래머스 문제 해결 아이디어 그래프와 각 간선의 가중치가 주어질 때, 시작 노드에서 출발해 지나는 간선의 가중치를 모두 더해 도착할 때까지 이  이하가 되는 노드를 모두 찾는 문제다. 즉 시작노드에서 특정 노드까지 가중치 합을 최소로 하는…","fields":{"slug":"/programmers. 배달/"},"frontmatter":{"date":"Mar 19, 2022","update":"Jan 01, 0001","title":"programmers. 배달","tags":["Algorithms","Graph","Shortest Path","Dijkstra Algorithm"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 단어가 알파벳 하나 차이로 다른 경우 단어 노드를 간선으로 연결한 후 시작 단어에서 타깃 단어에 이르기 까지 깊이 우선 탐색을 이용하여 해결할 수 있다. 그래프 생성: 단어 2개 조합에서 알파벳이 하나 차이나…","fields":{"slug":"/programmers. 단어 변환/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 단어 변환","tags":["Algorithms","programmers","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 에 대해 건설 비용이 작은 것부터 건설하면 전체 건설 비용이 가장 작도록 선택할 수 있다. 만약 두 지점 사이의 건설 비용이 아니라 부분 그래프의 건설 비용이 주어졌다면 그리디 알고리즘으로 구현할 수 없다. …","fields":{"slug":"/programmers. 섬 연결하기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 섬 연결하기","tags":["Algorithms","programmers","Greedy Algorithm","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다. 구현 문제는 빛을 좌회전, 우회전하는 것으로, 라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른…","fields":{"slug":"/programmers. 빛의 경로 사이클/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 빛의 경로 사이클","tags":["Algorithms","programmers","Implementation","Graph","Cyclic Graph"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 그래프에서  전체 경로를 만든다. 현재 위치에서 출발하는 티켓이 있는 경우 스택에 저장하고 티켓을 사용 처리한다. 현재 위치에서 출발하는 티켓이 없는 경우 해당 위치에는 도착만 가능하다. 해당 공항을 순서대로…","fields":{"slug":"/programmers. 여행경로/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 여행경로","tags":["Algorithms","programmers","Graph"]}}}]},{"fieldValue":"Greedy Algorithm","totalCount":2,"edges":[{"node":{"excerpt":"Greedy algorithm 매 상황에서 최적의 해를 구하는 것이 전체 문제의 최적 해가 될때 사용하는 알고리즘으로, 구현하기는 어렵지 않지만 정당성을 증명해야 답을 보장할 수 있다. 다음의 문제들에서 그리디 알고리즘을 사용해 정당성 증명을 연습할…","fields":{"slug":"/greedy_algorithm/"},"frontmatter":{"date":"Mar 09, 2022","update":"Jan 01, 0001","title":"그리디 알고리즘의 정당성 증명","tags":["Algorithm","Greedy Algorithm"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 에 대해 건설 비용이 작은 것부터 건설하면 전체 건설 비용이 가장 작도록 선택할 수 있다. 만약 두 지점 사이의 건설 비용이 아니라 부분 그래프의 건설 비용이 주어졌다면 그리디 알고리즘으로 구현할 수 없다. …","fields":{"slug":"/programmers. 섬 연결하기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 섬 연결하기","tags":["Algorithms","programmers","Greedy Algorithm","Graph","DFS"]}}}]},{"fieldValue":"Hashing","totalCount":1,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 효율성 통과가 까다롭다고 느꼈던 문제중 하나로, 점수를 제외한 가 에 불과하다는 점을 이용해서 모든 조건 조합을 해시한 다음 이진 검색을 통해 해결할 수 있었다. 코드는 문제에서 요구하는 순서대로 작성하면 된…","fields":{"slug":"/programmers. 순위 검색/"},"frontmatter":{"date":"Mar 05, 2022","update":"Jan 01, 0001","title":"programmers. 순위 검색","tags":["Algorithms","programmers","Hashing","Binary Search"]}}}]},{"fieldValue":"Heap","totalCount":4,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 하드디스크가 비어있을 때 요청이 들어오면 바로 처리한다. 하드디스크가 작업 중일 때 요청이 들어오면 진행 중인 작업을 끝내고, 작업 소요 시간을 최소 힙으로 정렬하여 힙의 순서대로 처리한다. 이때 와 로 현재…","fields":{"slug":"/programmers. 디스크 컨트롤러/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 디스크 컨트롤러","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 문제에서 정의한 야근 피로도는 야근을 시작한 시점에서 남은 일의 작업량을 모두 제곱하여 더한 값으로 해석할 수 있다. 수식으로 쓰면 문제의 목표는 이고 주어진 리스트에 대해 최대값을 최소화해서 목표를 달성할 …","fields":{"slug":"/programmers. 야근 지수/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 야근 지수","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 최소 힙과 최대 힙을 동시에 이용하는 것이 핵심이다. 이중 우선순위 큐에 적용하는 세가지 연산을 경우 별로 나누어 고려한다. 원소를 추가할 경우, 최소 힙과 최대 힙에 모두 추가한다. 최소값을 제거할 경우, …","fields":{"slug":"/programmers. 이중 우선순위 큐/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 이중 우선순위 큐","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 문제는 k 길이의 구간(또는 window) 최대값 중 최소값을 구하는 문제로 이해될 수 있다. stones 배열의 길이가 n이라 할 때, max()함수로 최대값을 구하는데에 선형 시간이 소요되므로 max()함…","fields":{"slug":"/programmers. 징검다리 건너기/"},"frontmatter":{"date":"Feb 10, 2022","update":"Jan 01, 0001","title":"programmers. 징검다리 건너기","tags":["Algorithms","programmers","Heap"]}}}]},{"fieldValue":"Implementation","totalCount":1,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다. 구현 문제는 빛을 좌회전, 우회전하는 것으로, 라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른…","fields":{"slug":"/programmers. 빛의 경로 사이클/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 빛의 경로 사이클","tags":["Algorithms","programmers","Implementation","Graph","Cyclic Graph"]}}}]},{"fieldValue":"NLP","totalCount":1,"edges":[{"node":{"excerpt":"은 2013년 구글에서 고안한 자연어 처리 아이디어로, 이에 기반한 모델은 와  두가지가 있다. 이 글은 그 중에서  모델을 원 논문과 deeplearning.ai 수업을 참고하여 정리한 글이다.  원 논문: Mikolov et. al., 2013,…","fields":{"slug":"/word2vec_cbow/"},"frontmatter":{"date":"Feb 25, 2022","update":"Jan 01, 0001","title":"word2vec - Continuous Bag-of-Words(CBOW)","tags":["NLP","word2vec","Word Embedding"]}}}]},{"fieldValue":"Shortest Path","totalCount":2,"edges":[{"node":{"excerpt":"최단 경로 알고리즘 그래프는 간선에 가중치 정보를 추가할 수 있다. 이런 그래프를 가중 그래프(weighted graph) 라고 하며, 자연스럽게 출발 노드에서 특정 노드로 가는 경로의 가중치 합이 최소가 되는 경로를 찾는 문제가 발생한다. 깊이 우…","fields":{"slug":"/shortest_path/"},"frontmatter":{"date":"Mar 21, 2022","update":"Jan 01, 0001","title":"최단 경로 알고리즘","tags":["Algorithms","Shortest Path","Dijkstra Algorithm","Floyd-Warshall Algorithm"]}}},{"node":{"excerpt":"문제: 프로그래머스 문제 해결 아이디어 그래프와 각 간선의 가중치가 주어질 때, 시작 노드에서 출발해 지나는 간선의 가중치를 모두 더해 도착할 때까지 이  이하가 되는 노드를 모두 찾는 문제다. 즉 시작노드에서 특정 노드까지 가중치 합을 최소로 하는…","fields":{"slug":"/programmers. 배달/"},"frontmatter":{"date":"Mar 19, 2022","update":"Jan 01, 0001","title":"programmers. 배달","tags":["Algorithms","Graph","Shortest Path","Dijkstra Algorithm"]}}}]},{"fieldValue":"Two Pointer Algorithm","totalCount":1,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 투 포인터 알고리즘으로 문제를 해결 할 수 있다. 배열의 임의의 원소 ai에 대해 왼쪽 원소값 ai-1과 오른쪽 원소값 ai+1이 모두 ai보다 작은 경우 마지막까지 남을 수 없으므로 제외한다.  스택에 마지…","fields":{"slug":"/programmers. 풍선 터뜨리기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 풍선 터뜨리기","tags":["Algorithms","programmers","Two Pointer Algorithm"]}}}]},{"fieldValue":"Word Embedding","totalCount":1,"edges":[{"node":{"excerpt":"은 2013년 구글에서 고안한 자연어 처리 아이디어로, 이에 기반한 모델은 와  두가지가 있다. 이 글은 그 중에서  모델을 원 논문과 deeplearning.ai 수업을 참고하여 정리한 글이다.  원 논문: Mikolov et. al., 2013,…","fields":{"slug":"/word2vec_cbow/"},"frontmatter":{"date":"Feb 25, 2022","update":"Jan 01, 0001","title":"word2vec - Continuous Bag-of-Words(CBOW)","tags":["NLP","word2vec","Word Embedding"]}}}]},{"fieldValue":"programmers","totalCount":13,"edges":[{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 효율성 통과가 까다롭다고 느꼈던 문제중 하나로, 점수를 제외한 가 에 불과하다는 점을 이용해서 모든 조건 조합을 해시한 다음 이진 검색을 통해 해결할 수 있었다. 코드는 문제에서 요구하는 순서대로 작성하면 된…","fields":{"slug":"/programmers. 순위 검색/"},"frontmatter":{"date":"Mar 05, 2022","update":"Jan 01, 0001","title":"programmers. 순위 검색","tags":["Algorithms","programmers","Hashing","Binary Search"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 하드디스크가 비어있을 때 요청이 들어오면 바로 처리한다. 하드디스크가 작업 중일 때 요청이 들어오면 진행 중인 작업을 끝내고, 작업 소요 시간을 최소 힙으로 정렬하여 힙의 순서대로 처리한다. 이때 와 로 현재…","fields":{"slug":"/programmers. 디스크 컨트롤러/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 디스크 컨트롤러","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 단어가 알파벳 하나 차이로 다른 경우 단어 노드를 간선으로 연결한 후 시작 단어에서 타깃 단어에 이르기 까지 깊이 우선 탐색을 이용하여 해결할 수 있다. 그래프 생성: 단어 2개 조합에서 알파벳이 하나 차이나…","fields":{"slug":"/programmers. 단어 변환/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 단어 변환","tags":["Algorithms","programmers","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 문제에서 정의한 야근 피로도는 야근을 시작한 시점에서 남은 일의 작업량을 모두 제곱하여 더한 값으로 해석할 수 있다. 수식으로 쓰면 문제의 목표는 이고 주어진 리스트에 대해 최대값을 최소화해서 목표를 달성할 …","fields":{"slug":"/programmers. 야근 지수/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 야근 지수","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 최소 힙과 최대 힙을 동시에 이용하는 것이 핵심이다. 이중 우선순위 큐에 적용하는 세가지 연산을 경우 별로 나누어 고려한다. 원소를 추가할 경우, 최소 힙과 최대 힙에 모두 추가한다. 최소값을 제거할 경우, …","fields":{"slug":"/programmers. 이중 우선순위 큐/"},"frontmatter":{"date":"Feb 26, 2022","update":"Jan 01, 0001","title":"programmers. 이중 우선순위 큐","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 에 대해 건설 비용이 작은 것부터 건설하면 전체 건설 비용이 가장 작도록 선택할 수 있다. 만약 두 지점 사이의 건설 비용이 아니라 부분 그래프의 건설 비용이 주어졌다면 그리디 알고리즘으로 구현할 수 없다. …","fields":{"slug":"/programmers. 섬 연결하기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 섬 연결하기","tags":["Algorithms","programmers","Greedy Algorithm","Graph","DFS"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 투 포인터 알고리즘으로 문제를 해결 할 수 있다. 배열의 임의의 원소 ai에 대해 왼쪽 원소값 ai-1과 오른쪽 원소값 ai+1이 모두 ai보다 작은 경우 마지막까지 남을 수 없으므로 제외한다.  스택에 마지…","fields":{"slug":"/programmers. 풍선 터뜨리기/"},"frontmatter":{"date":"Feb 11, 2022","update":"Jan 01, 0001","title":"programmers. 풍선 터뜨리기","tags":["Algorithms","programmers","Two Pointer Algorithm"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 문제는 k 길이의 구간(또는 window) 최대값 중 최소값을 구하는 문제로 이해될 수 있다. stones 배열의 길이가 n이라 할 때, max()함수로 최대값을 구하는데에 선형 시간이 소요되므로 max()함…","fields":{"slug":"/programmers. 징검다리 건너기/"},"frontmatter":{"date":"Feb 10, 2022","update":"Jan 01, 0001","title":"programmers. 징검다리 건너기","tags":["Algorithms","programmers","Heap"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 길 찾기 문제이며 다이나믹 프로그래밍으로 해결할 수 있다. 오른쪽과 아래쪽으로만 갈 수 있으므로 왼쪽과 위쪽의 정보를 기반으로 해야한다. 최단 경로의 개수이므로 왼쪽과 위쪽의 값을 더하면 된다. 배열 초기화를…","fields":{"slug":"/programmers. 등굣길/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 등굣길","tags":["Algorithms","programmers","Dynamic Programming"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다. 구현 문제는 빛을 좌회전, 우회전하는 것으로, 라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른…","fields":{"slug":"/programmers. 빛의 경로 사이클/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 빛의 경로 사이클","tags":["Algorithms","programmers","Implementation","Graph","Cyclic Graph"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 보드의 가로 세로 길이가 최대 1,000이므로 모든 보드의 원소에 대해 구간별로 탐색하면 문제에서 요구하는 시간을 맞출 수 없다. 대신 보드의 원소가 모두 1 또는 0이라는 것을 이용하여 (길 찾기 예제에서 …","fields":{"slug":"/programmers. 가장 큰 정사각형 찾기/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 가장 큰 정사각형 찾기","tags":["Algorithms","programmers","Dynamic Programming"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 그래프에서  전체 경로를 만든다. 현재 위치에서 출발하는 티켓이 있는 경우 스택에 저장하고 티켓을 사용 처리한다. 현재 위치에서 출발하는 티켓이 없는 경우 해당 위치에는 도착만 가능하다. 해당 공항을 순서대로…","fields":{"slug":"/programmers. 여행경로/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. 여행경로","tags":["Algorithms","programmers","Graph"]}}},{"node":{"excerpt":"문제 : 프로그래머스 문제 해결 아이디어 다이내믹 프로그래밍을 활용하여 해결 할 수 있다.  최대 8번까지 N의 횟수를 세어야 하므로, DP 테이블을 길이 8인 1차원 배열로 만든다. DP 테이블 dpi에 N을 i번 이용해 만들 수 있는 수의 배열을…","fields":{"slug":"/programmers. N으로 표현/"},"frontmatter":{"date":"Feb 09, 2022","update":"Jan 01, 0001","title":"programmers. N으로 표현","tags":["Algorithms","programmers","Dynamic Programming"]}}}]},{"fieldValue":"word2vec","totalCount":1,"edges":[{"node":{"excerpt":"은 2013년 구글에서 고안한 자연어 처리 아이디어로, 이에 기반한 모델은 와  두가지가 있다. 이 글은 그 중에서  모델을 원 논문과 deeplearning.ai 수업을 참고하여 정리한 글이다.  원 논문: Mikolov et. al., 2013,…","fields":{"slug":"/word2vec_cbow/"},"frontmatter":{"date":"Feb 25, 2022","update":"Jan 01, 0001","title":"word2vec - Continuous Bag-of-Words(CBOW)","tags":["NLP","word2vec","Word Embedding"]}}}]}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}