{"componentChunkName":"component---src-templates-post-tsx","path":"/programmers. 빛의 경로 사이클/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>문제 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/86052\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">프로그래머스</a></p>\n</blockquote>\n<h3 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h3>\n<p>구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다.</p>\n<ol>\n<li>구현 문제는 빛을 좌회전, 우회전하는 것으로, <code class=\"language-text\">delta = [(-1,0), (0,1), (1,0), (0,-1)]</code>라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른쪽으로 한 칸 옮기는 것으로 구현할 수 있다.</li>\n<li>grid의 세로길이 n, 가로 길이 m에 대해 모든 사이클 길이의 합은 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn><mi>x</mi><mi>n</mi><mi>x</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">4 x n x m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">x</span><span class=\"mord mathdefault\">m</span></span></span></span>이다. 즉 모든 가능한 이동에 대해 사이클이 성립한다.</li>\n<li>격자에서 같은 노드라 하더라도 빛이 지나가는 방향이 다르면 다른 경로로 여겨진다. 따라서 모든 지점에 대해 오른쪽, 왼쪽, 위쪽, 아래쪽 <strong>4개 경로</strong>를 통해 빛이 <strong>들어온</strong> 경로를 기록한다(나간 경로를 기록할 수도 있다). 빛이 같은 경로로 지나간다면 같은 사이클이 되므로 중복해서 세지 않게 주의한다.</li>\n</ol>\n<p>종합해보면, 임의의 노드에 4개 방향으로 빛을 쏘되 해당 노드에 같은 방향으로 쏘아진 빛이 있는 경우는 제외한다. 같은 경로로 돌아올 때까지 경로를 이동하며 기록을 남기고, 사이클이 끝날 때 마다 사이클의 길이를 기록한다.</p>\n<p>2번에 의해 이중 for문 내의 연산은 모든 i of n, j of m에 대해 합해서 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mn>4</mn><mo>∗</mo><mi>n</mi><mo>∗</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">4 * n * m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.46528em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span>번이다. n과 m은 최대 500이므로 시간 제한을 통과할 수 있다.</p>\n<h3 id=\"파이썬-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\n    ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    n<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># 인덱스를 늘리면 오른쪽으로, 인덱스를 줄이면 왼쪽으로 이동하도록 배치</span>\n    delta <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># 모든 노드에 대해 4가지 방향으로 들어오는 사이클 검토</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 해당 노드에 같은 방향으로 들어온 기록이 있으면 스킵</span>\n                <span class=\"token keyword\">if</span> k <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">continue</span>\n\n                cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k\n                dx<span class=\"token punctuation\">,</span> dy <span class=\"token operator\">=</span> delta<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span>\n                <span class=\"token comment\"># 해당 노드에 같은 방향으로 들어온 기록이 없을 때까지 경로 이동</span>\n                <span class=\"token keyword\">while</span> d <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    arr<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n                    cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n                    <span class=\"token keyword\">if</span> grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">:</span>\n                        dx<span class=\"token punctuation\">,</span> dy <span class=\"token operator\">=</span> delta<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n                    <span class=\"token keyword\">elif</span> grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'R'</span><span class=\"token punctuation\">:</span>\n                        dx<span class=\"token punctuation\">,</span> dy <span class=\"token operator\">=</span> delta<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\n\n                    x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> m\n                    d <span class=\"token operator\">=</span> delta<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dx<span class=\"token punctuation\">,</span> dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\"># 사이클의 길이를 저장</span>\n                ret<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span></code></pre></div>","excerpt":"문제 : 프로그래머스 문제 해결 아이디어 구현 문제와 그래프 사이클에 대한 문제가 합쳐져 있다. 구현 문제는 빛을 좌회전, 우회전하는 것으로, 라고 했을 때 좌회전은 delta 배열에서 인덱스를 왼쪽으로 한 칸 옮기는 것으로, 우회전은 인덱스를 오른…","tableOfContents":"<ul>\n<li><a href=\"/programmers.%20%E1%84%87%E1%85%B5%E1%86%BE%E1%84%8B%E1%85%B4%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%85%E1%85%A9%20%E1%84%89%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%8F%E1%85%B3%E1%86%AF/#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">문제 해결 아이디어</a></li>\n<li><a href=\"/programmers.%20%E1%84%87%E1%85%B5%E1%86%BE%E1%84%8B%E1%85%B4%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%85%E1%85%A9%20%E1%84%89%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%8F%E1%85%B3%E1%86%AF/#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\">파이썬 코드</a></li>\n</ul>","fields":{"slug":"/programmers. 빛의 경로 사이클/"},"frontmatter":{"title":"programmers. 빛의 경로 사이클","date":"Feb 09, 2022","tags":["Algorithms","programmers","Implementation","Graph","Cyclic Graph"],"keywords":["lab snowith","snowith"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/programmers. 빛의 경로 사이클/","series":[],"lastmod":"2022-02-09"}},"staticQueryHashes":["2027115977","694178885"]}