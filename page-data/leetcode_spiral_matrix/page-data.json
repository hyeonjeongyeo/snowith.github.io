{"componentChunkName":"component---src-templates-post-tsx","path":"/leetcode_spiral_matrix/","result":{"data":{"markdownRemark":{"html":"<p>4월에는 하루에 LeetCode 문제를 최소 3개씩 풀기로 계획했다. 그 와중에 이 문제가 얼마전에 쳤던 코딩 테스트에 기출된 문제와 유사해서 기록하기로 했다.</p>\n<h3 id=\"문제-링크\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC\" aria-label=\"문제 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 링크</h3>\n<blockquote>\n<p><a href=\"https://leetcode.com/problems/spiral-matrix/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LeetCode, 54. Spiral Matrix I</a></p>\n</blockquote>\n<blockquote>\n<p><a href=\"https://leetcode.com/problems/spiral-matrix-ii/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LeetCode, 59. Spiral Matrix II</a></p>\n</blockquote>\n<h2 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h2>\n<p>이 문제는 달팽이 문제라고도 하며, 알고리즘을 배우기 시작할 때 몇 번 마주쳤던 구현 문제다. 꼭 달팽이를 시계방향으로 탐색하는 것이 아니더라도 반시계 방향으로 탐색하거나 만다라 모양 등으로 탐색하도록 문제를 변형할 수 있다.</p>\n<p>이 글에서 소개하는 두 문제는 거의 같은 방법으로 해결할 수 있다. 54번 문제는 행렬을 읽어들이는 문제고, 59번 문제는 주어진 조건에 맞는 행렬을 만들어서 출력하는 문제다. 행렬을 읽는지 쓰는지에 관계없이 행렬의 원소에 같은 순서로 접근하는 것으로 코드의 많은 부분을 재사용 할 수 있다.</p>\n<p>특정 규칙에 따라 방향을 바꾸기 위해 <strong>방향 벡터</strong> <code class=\"language-text\">dv</code>를 설정해 문제에 접근했다. 방향 벡터에는 방향을 틀 때 <strong>업데이트 할 인덱스 변화값</strong>을 저장한다. 여기서는 행렬의 끝에 다다르거나 이미 읽거나 쓴 값에 접근할 경우 행렬의 인덱스를 업데이트해서 (시계 방향으로 돌 수 있도록)<strong>오른쪽 방향으로 90도 회전</strong>했다.</p>\n<p>요약하면:</p>\n<ul>\n<li>행렬의 끝에 다다르지 않고, 이미 읽거나 쓴 값이 아닌경우에 한해 다음을 반복한다.</li>\n<li>지금 인덱스의 행렬값을 읽거나 쓴다.</li>\n<li>인덱스를 업데이트하고 읽거나 쓴 표시를 남긴다. 이때, 업데이트 할 인덱스 값이 범위를 넘었거나 이미 읽거나 쓴 값을 가리키는 경우 방향을 튼 인덱스 값으로 업데이트한다.</li>\n</ul>\n<h2 id=\"파이썬-구현-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B5%AC%ED%98%84-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 구현 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 구현 코드</h2>\n<p>LeetCode에서는 Python으로 문제 답안을 Solution class 형태로 제출해야 한다. LeetCode의 좋은 점은 제한 시간이 명시되어 있고 답안 제출 시에도 running time과 memory usage를 출력하고 다른 사람의 답에 비해 얼마나 빠르거나 느린지 알려준다는 점이다. </p>\n<h3 id=\"54\" style=\"position:relative;\"><a href=\"#54\" aria-label=\"54 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>54.</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">spiralOrder</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        \n        ret <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        INF <span class=\"token operator\">=</span> <span class=\"token number\">1e9</span>\n        \n        x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n        m<span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        dv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        \n        <span class=\"token keyword\">while</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> x <span class=\"token operator\">&lt;</span> m <span class=\"token keyword\">and</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> y <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> matrix<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> INF<span class=\"token punctuation\">:</span>\n            \n            <span class=\"token comment\"># read the element value</span>\n            ret<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># update values</span>\n            matrix<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> INF\n            nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            \n            <span class=\"token comment\"># if nx or ny is out of boundary, update k</span>\n            <span class=\"token keyword\">if</span> nx <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> ny <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> matrix<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> INF<span class=\"token punctuation\">:</span>\n                k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span>\n                x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                y <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> nx<span class=\"token punctuation\">,</span> ny\n            \n        <span class=\"token keyword\">return</span> ret</code></pre></div>\n<h3 id=\"59\" style=\"position:relative;\"><a href=\"#59\" aria-label=\"59 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>59.</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">generateMatrix</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        \n        <span class=\"token comment\"># initiate a matrix grid</span>\n        grid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        \n        num <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span>\n        dv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n        \n        <span class=\"token keyword\">while</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> x <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> y <span class=\"token operator\">&lt;</span> n <span class=\"token keyword\">and</span> grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            \n            <span class=\"token comment\"># write number on the grid</span>\n            grid<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> num\n            \n            <span class=\"token comment\"># update values</span>\n            num <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n            ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            \n            <span class=\"token comment\"># if nx or ny is out of boundary, update k</span>\n            <span class=\"token keyword\">if</span> nx <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> ny <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> grid<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                k <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>k<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span>\n                x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n                y <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> nx<span class=\"token punctuation\">,</span> ny\n                \n        <span class=\"token keyword\">return</span> grid\n            </code></pre></div>","excerpt":"4월에는 하루에 LeetCode 문제를 최소 3개씩 풀기로 계획했다. 그 와중에 이 문제가 얼마전에 쳤던 코딩 테스트에 기출된 문제와 유사해서 기록하기로 했다. 문제 링크 LeetCode, 54. Spiral Matrix I LeetCode, 59.…","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/leetcode_spiral_matrix/#%EB%AC%B8%EC%A0%9C-%EB%A7%81%ED%81%AC\">문제 링크</a></li>\n</ul>\n</li>\n<li><a href=\"/leetcode_spiral_matrix/#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">문제 해결 아이디어</a></li>\n<li>\n<p><a href=\"/leetcode_spiral_matrix/#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EA%B5%AC%ED%98%84-%EC%BD%94%EB%93%9C\">파이썬 구현 코드</a></p>\n<ul>\n<li><a href=\"/leetcode_spiral_matrix/#54\">54.</a></li>\n<li><a href=\"/leetcode_spiral_matrix/#59\">59.</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/leetcode_spiral_matrix/"},"frontmatter":{"title":"LeetCode(54, 59). Spiral Matrix I, II","date":"Apr 07, 2022","tags":["Algorithm","Implementation"],"keywords":["snowith lab 🧪","snowith"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/leetcode_spiral_matrix/","series":[],"lastmod":"2022-04-07"}},"staticQueryHashes":["2027115977","694178885"]}