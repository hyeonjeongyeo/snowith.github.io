{"componentChunkName":"component---src-templates-post-tsx","path":"/programmers. 단어 변환/","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>문제 : <a href=\"https://programmers.co.kr/learn/courses/30/lessons/43163\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">프로그래머스</a></p>\n</blockquote>\n<h2 id=\"문제-해결-아이디어\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\" aria-label=\"문제 해결 아이디어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 아이디어</h2>\n<p>단어가 알파벳 하나 차이로 다른 경우 단어 노드를 간선으로 연결한 후 시작 단어에서 타깃 단어에 이르기 까지 깊이 우선 탐색을 이용하여 해결할 수 있다.</p>\n<ul>\n<li>그래프 생성: 단어 2개 조합에서 알파벳이 하나 차이나는 단어를 그래프에 저장한다.</li>\n<li>최소 변환 횟수 찾기: 깊이 우선 탐색을 이용해, 타겟 단어에 이르기까지 최소 거리를 업데이트하며 연결된 노드를 탐색한다.</li>\n</ul>\n<h2 id=\"파이썬-코드\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\" aria-label=\"파이썬 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파이썬 코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> defaultdict\n<span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> combinations\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>begin<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> words<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    \n    graph <span class=\"token operator\">=</span> defaultdict<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">)</span>\n    combs <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>combinations<span class=\"token punctuation\">(</span>words <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\"># 2개 단어 조합 중에서 알파벳이 하나 차이나면 graph에 저장</span>\n    <span class=\"token keyword\">for</span> comb <span class=\"token keyword\">in</span> combs<span class=\"token punctuation\">:</span>\n        w1<span class=\"token punctuation\">,</span> w2 <span class=\"token operator\">=</span> comb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> comb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        sameness <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token keyword\">if</span> c1 <span class=\"token operator\">==</span> c2 <span class=\"token keyword\">else</span> <span class=\"token number\">0</span> <span class=\"token keyword\">for</span> c1<span class=\"token punctuation\">,</span> c2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>w1<span class=\"token punctuation\">,</span> w2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> sameness <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>w1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            graph<span class=\"token punctuation\">[</span>w1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w2<span class=\"token punctuation\">)</span>\n            graph<span class=\"token punctuation\">[</span>w2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>w1<span class=\"token punctuation\">)</span>\n        \n    <span class=\"token comment\"># 깊이 우선 탐색 구현</span>\n    min_d <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n    visited <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token comment\"># stack에 [노드, begin에서의 거리] 형태로 저장</span>\n    stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>begin<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">while</span> stack<span class=\"token punctuation\">:</span>\n        v<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> v <span class=\"token operator\">==</span> target <span class=\"token keyword\">and</span> min_d <span class=\"token operator\">></span> d<span class=\"token punctuation\">:</span>\n            min_d <span class=\"token operator\">=</span> d\n        <span class=\"token keyword\">if</span> v <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> visited<span class=\"token punctuation\">:</span>\n            visited<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span> u <span class=\"token keyword\">in</span> graph<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">,</span> d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> min_d <span class=\"token keyword\">if</span> min_d <span class=\"token operator\">!=</span> <span class=\"token number\">100</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></code></pre></div>","excerpt":"문제 : 프로그래머스 문제 해결 아이디어 단어가 알파벳 하나 차이로 다른 경우 단어 노드를 간선으로 연결한 후 시작 단어에서 타깃 단어에 이르기 까지 깊이 우선 탐색을 이용하여 해결할 수 있다. 그래프 생성: 단어 2개 조합에서 알파벳이 하나 차이나…","tableOfContents":"<ul>\n<li><a href=\"/programmers.%20%EB%8B%A8%EC%96%B4%20%EB%B3%80%ED%99%98/#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EC%95%84%EC%9D%B4%EB%94%94%EC%96%B4\">문제 해결 아이디어</a></li>\n<li><a href=\"/programmers.%20%EB%8B%A8%EC%96%B4%20%EB%B3%80%ED%99%98/#%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EC%BD%94%EB%93%9C\">파이썬 코드</a></li>\n</ul>","fields":{"slug":"/programmers. 단어 변환/"},"frontmatter":{"title":"programmers. 단어 변환","date":"Feb 26, 2022","tags":["Algorithms","programmers","Graph","DFS"],"keywords":["Dev.Yeo 🏄🏻","hyeonjeong"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/programmers. 단어 변환/","series":[],"lastmod":"2022-02-26"}},"staticQueryHashes":["2027115977","694178885"]}